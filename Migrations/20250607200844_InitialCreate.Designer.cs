// <auto-generated />
using System;
using CoolZoneAPI.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CoolZoneAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607200844_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoolZoneAPI.Domain.Entity.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("STATE");

                    b.HasKey("Id");

                    b.ToTable("CITIES", (string)null);
                });

            modelBuilder.Entity("CoolZoneAPI.Domain.Entity.ThermalShelter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("ADDRESS");

                    b.Property<int>("Capacity")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CAPACITY");

                    b.Property<Guid>("CityId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CITY_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OPENING_HOURS");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TYPE");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("THERMAL_SHELTERS", (string)null);
                });

            modelBuilder.Entity("CoolZoneAPI.Domain.Entity.ThermalShelter", b =>
                {
                    b.HasOne("CoolZoneAPI.Domain.Entity.City", "City")
                        .WithMany("ThermalShelters")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CoolZoneAPI.Domain.Entity.City", b =>
                {
                    b.Navigation("ThermalShelters");
                });
#pragma warning restore 612, 618
        }
    }
}
